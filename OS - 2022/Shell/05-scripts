--05-b-2000.txt
#!/bin/bash

read -p "Enter your name: " name
echo "Hello, ${name}"

--05-b-2800.txt
#!/bin/bash

if [ ! $# -eq 1 ];then
        echo "Wrong number of parameters"
        exit
fi
if [[ $1 =~ ^[0-9a-zA-Z]+$ ]]; then
        echo "Contains only digits and letters"
else
        echo "Contains not only digits and letters"
fi

--05-b-3100.txt
#!/bin/bash

read -p "Enter username: " username
echo "Number of active sessions are: $(who | grep "${username}" | wc -l)"

05-b-3200.txt
#!/bin/bash

read -p "Enter full path of directory: " dir
if [ ! -d "${dir}" ]; then
        echo "This is not a directory"
        exit
fi
count_files=$(find "${dir}" -mindepth 1 -type f | wc -l)
count_dirs=$(find "${dir}" -mindepth 1 -type d 2>/dev/null| wc -l)

echo "Number of files is ${count_files} and number of dirs is ${count_dirs}"

05-b-3300.txt
#!/bin/bash

read -p "Enter file1: " file1
read -p "Enter file2: " file2
read -p "Enter file3: " file3
paste "${file1}" "${file2}" | sort > "${file3}"


05-b-3400.txt
#!/bin/bash

read -p "Enter string: " string
read -p "Enter file: " file

grep -q "${string}" "${file}"
echo $?

05-b-4200.txt
#!/bin/bash

max=0
cur=0
line=$( cat program.c | grep -o . | egrep "[{}]")

while read line; do
        if [ "${line}" = '{' ]; then
                cur=$((cur+1))
        fi
        if [ "${line}" = '}' ]; then
                if [ $cur -gt $max ]; then
                        max=$cur
                fi
                cur=$(($cur-1))
        fi
done < <(echo "$line")

echo "The deepest nesting is ${max} levels"

05-b-4301.txt

05-b-4400.txt

05-b-4500.txt

05-b-4600.txt

05-b-4700.txt
#!/bin/bash

if [ $# -eq 2 ]; then
        echo "$1" | rev | sed -E "s/(.{3})/\1$2/g" | rev
else
        echo "$1" | rev | sed -E 's/(.{3})/\1 /g' | rev
fi
05-b-6800.txt
#!/bin/bash

items=$(find "$1" -mindepth 1 -printf "%f\n" 2>/dev/null)

while read line; do
        if [[ -d "$line" ]];then
                count_files=$(find "$line" -mindepth 1 2>/dev/null | wc -l)
                echo ""$line" ("$count_files" entries)"
        fi
        if [[ -f "$line" ]]; then
                size=$(stat --printf "%s" "$line" )
                echo ""$line" ("$size" bytes)"
        fi
done < <(echo "$items")

05-b-7000.txt
#!/bin/bash

read -p "Enter string: " str

for i in $@; do
        num_rows=$(cat $i | grep "$str" | wc -l)
        echo "$i -> $num_rows rows"
done

05-b-7200.txt
#!/bin/bash

for i in $@; do
        if [[ -f "$i" ]];then
                if [[ -r "$i" ]]; then
                        echo ""$i" is readable file"
                fi
        fi
        if [[ -d "$i" ]];then
                count_files=$(find "$i" -type f 2>/dev/null | wc -l)
                output_files=$(find "$i" -size -"$count_files" -printf "%f\n")
                echo "Files in directory: "
                echo "$output_files"
        fi

done

05-b-7500.txt
#!/bin/bash

number=5
tries_count=0

while true; do
        read -p "Guess? " user_num
if [ "$user_num" -lt "$number" ];then
        echo "...greater!"
        tries_count=$(($tries_count + 1))
elif [ "$user_num" -gt "$number" ];then
        echo "...smaller!"
        tries_count=$(($tries_count + 1))
else
        echo "Right! Guessed in "$tries_count" tries!"
        break
        exit 0
fi
done

exit 0

05-b-7550.txt
//not tested + todo -> check if user exists
#!/bin/bash

if [ ! $# -eq 1 ];then
        echo "Invalid number of arguments"
        exit 1
fi

count=$(ps -u "$1" | wc -l)
killall -9 -u "$1"

echo "Killed processes: "${count}""
exit 0

05-b-7700.txt
#!/bin/bash
if [ ! $# -eq 2 ]; then
    echo "Not 2 arguments"
    exit 1
fi
if [ ! -d $1 ]; then
        echo "First arg is not a directory"
        exit 2
fi
if [[ ! $2 =~ [0-9]+ ]]; then
        echo "Second arg is not a number"
        exit 3
fi

files=$(find "$1" -type f -size +"$2" 2>/dev/null -printf "%s\n")
count=0

while read line; do
        count=$((count + 1))
done < <(echo "$files")

echo "$count"

05-b-7800.txt
#!/bin/bash

directories=$(echo $PATH)
count=0
IFS=":"
while read -d ':' line; do
        exec_files=$(find "${line}" -type f -executable 2>/dev/null)
        cur_count=$(echo "${exec_files}" | wc -l)
        count=$(($count+$cur_count))
done < <(echo "${directories}")


05-b-9100.txt


