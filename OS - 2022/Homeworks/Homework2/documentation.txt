За решението си на задачата изпълнявам следните стъпки:

    1) Правя проверка на подадените аргументи - трябва да бъде подаден само един аргумент. В противен случай се връща грешка.
    2) Отварям файла, който е подаден като аргумент, само за четене. С помощта на stat проверявам каква е големината му.
    3) Пропускам пътвите три байта (указващи магическата дума ORC) с lseek.
    4) Правя структура за инструкциите като тя има 4 елемента - opcode на инструкцията и останалите три са трите възможни 
       операнда, които могат да бъдат подадени на инструкцията.
    5) Прочитам от файла числото ram_size, за да знам  колко клетки памет трябва да има на разположение машината, 
       за да изпълни програмата. Запазвам го в променлива ram_size. След като вече съм наясно с размера, 
       заделям памет с този размер като за целта използвам calloc.
    6) Започвам да чета от файла chunk-ове с големината на структурата. Проверявам какъв е opcode-а на дадената 
       инструкция. Ако той е:
        - 0x00 (nop) - с lseek пропускам инструкцията
        - 0x95 (set) - взимам стойността val и я записвам в ram на адрес tar
        - 0x5d (load) - намирам стойностите на to и from_ptr и копирам стойността от клетката с адрес 
                        стойността в клетката from_ptr в клетката с адрес to
        - 0x63 (store) - намирам стойностите на to и from_ptr и копирам стойността от клетката с адрес
                         from в клетката с адрес стойността на клетката to_ptr
        - 0x91 (jmp) - взимам стойността на клетката с адрес idx и с lseek отивам на желаната инструкция
        - 0x25 (sgz)  - правя проверка дали стойността на клетката с адрес v е по-голяма от 0 и 
                        ако да прескачам на следващата инструкция 
        - 0xAD (add) - взимам си стойностите в клетките с адреси v1 и v2 и ги събирам като ги 
                       записвам в ram на указания адрес 
        - 0x33 (mul) - взимам си стойностите в клетките с адреси v1 и v2 и ги умножавам като ги записвам 
                       в ram на указания адрес      
        - 0x04 (div) - взимам си стойностите в клетките с адреси v1 и v2 и ги събирам като ги деля в ram 
                       на указания адрес. Правя проверка ако числото, на което деля е 0 - ако е така 
                       изкарвам съобщение за грешка   
        - 0xB5 (mod)  - взимам си стойностите в клетките с адреси v1 и v2 и ги деля като ги записвам в ram
                       на указания адрес 
        - 0xC1 (out)  - взимам си първата инструкция и изкарам на stdout символа с ascii код 
        - 0xBF (sleep) - използвам функцията sleep като тъй като тя приема секунди като аргумент деля на 1000, 
                        за да ги превърна в милисекунди
    7) Накрая освобождавам паметта, която съм заделила в началото на програмата.
    